<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ap="clr-namespace:Mohsenmou.UI.WPF.AttachedProperties"
    xmlns:controls="clr-namespace:Mohsenmou.UI.WPF.Controls"
    xmlns:converters="clr-namespace:Mohsenmou.UI.WPF.Converters"
    xmlns:theme="clr-namespace:Mohsenmou.UI.WPF">

    <Style x:Key="TabControlCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ListSelectedBackground}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Margin" Value="4,1,1,1" />
        <Setter Property="Visibility" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TabItem}}, Path=IsSelected, Converter={StaticResource booleanToVisibilityConverter}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid SnapsToDevicePixels="true">
                        <Border x:Name="border"
                                Background="{TemplateBinding Background}">
                            <Grid>
                                <Path
                                        Width="9"
                                        Height="9"
                                        Margin="{TemplateBinding Padding}"
                                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        Fill="{TemplateBinding Foreground}"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                        Stretch="Uniform">
                                    <Path.Data>
                                        <PathGeometry Figures="M1.0002288,0C1.2559776,2.3003668E-07,1.5117262,0.097747288,1.7072186,0.29324149L16,14.586132                                                        30.29278,0.29324149C30.683766,-0.097746828 31.315775,-0.097746828 31.706761,0.29324149 32.097748,0.68424486                                                        32.097748,1.3162439 31.706761,1.707232L17.413979,16.000122 31.706761,30.293013C32.097748,30.684015                                                        32.097748,31.316015 31.706761,31.707003 31.511757,31.902008 31.25578,32 30.999802,32 30.743763,32                                                        30.487786,31.902008 30.29278,31.707003L16,17.414112 1.7072186,31.707003C1.5122145,31.902008 1.2562368,32                                                       1.0002593,32 0.74422078,32 0.48824324,31.902008 0.29323908,31.707003 -0.097746359,31.316015                                                        -0.097746359,30.684015 0.29323908,30.293013L14.58602,16.000122 0.29323908,1.707232C-0.097746359,1.3162439                                                       -0.097746359,0.68424486 0.29323908,0.29324149 0.48873149,0.097747288 0.74448018,2.3003668E-07 1.0002288,0z" />
                                    </Path.Data>
                                </Path>
                            </Grid>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ButtonTemplate" TargetType="{x:Type Button}">
        <Grid SnapsToDevicePixels="true">
            <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.CornerRadius)}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <controls:XamlImage x:Name="icon"                                        
                        MaxWidth="16"
                        MaxHeight="16"
                        Margin="8,0,4,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Template="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.Icon)}"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.ShowIcon), Converter={converters:BoolToVisibilityFlexConverter}}" />
                    <ContentPresenter x:Name="contentPresenter"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            </Border>
            <Border x:Name="FocusBorder"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.CornerRadius)}"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlDefaultBorder}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger SourceName="icon" Property="Visibility" Value="Collapsed">
                <Setter Property="Padding" Value="8,4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ControlBackground}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlBorder}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0,4,8,4" />
        <Setter Property="ap:ButtonProperties.CornerRadius" Value="0" />
        <Setter Property="Template" Value="{StaticResource ButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="WindowButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="MouseOverBorder"
                Background="{theme:ThemeResource ResourceKey=WindowControlMouseOverBackground}"
                Opacity="0" />
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="WindowButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="24" />
        <Setter Property="Width" Value="24" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=WindowHeaderForeground}" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource WindowButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="ClearTextButtonTemplate" TargetType="{x:Type Button}">
        <Grid Background="Transparent">
            <Border x:Name="MouseOverBorder"
                Background="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}"
                Opacity="0" />
            <ContentPresenter x:Name="contentPresenter"
                Margin="{TemplateBinding Padding}"
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                Content="{TemplateBinding Content}"
                ContentTemplate="{TemplateBinding ContentTemplate}" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="MouseOverBorder" Property="Opacity" Value="1" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ClearButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Height" Value="16" />
        <Setter Property="Width" Value="16" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=GlyphForeground}" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ClearTextButtonTemplate}" />
    </Style>

    <ControlTemplate x:Key="ToolBarButtonTemplate" TargetType="{x:Type Button}">
        <Grid SnapsToDevicePixels="true">
            <Border x:Name="border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.CornerRadius)}">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    <controls:XamlImage x:Name="icon"                                        
                        MaxWidth="16"
                        MaxHeight="16"
                        Margin="8,0"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        HorizontalContentAlignment="Center"
                        VerticalContentAlignment="Center"
                        Template="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.Icon)}"
                        Visibility="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.ShowIcon), Converter={converters:BoolToVisibilityFlexConverter}}" />
                    <ContentPresenter x:Name="contentPresenter"
                        Grid.Column="1"
                        Margin="{TemplateBinding Padding}"
                        HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                        Focusable="False"
                        RecognizesAccessKey="True"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                </Grid>
            </Border>
            <Border x:Name="FocusBorder"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                CornerRadius="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=(ap:ButtonProperties.CornerRadius)}"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlDefaultBorder}" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter TargetName="border" Property="Background" Value="{theme:ThemeResource ResourceKey=ControlPressedBackground}" />
                <Setter TargetName="border" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlPressedBorder}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger SourceName="icon" Property="Visibility" Value="Collapsed">
                <Setter Property="Padding" Value="8,4" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ToolBarButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ControlMouseOverBackground}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ControlBorder}" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ControlForeground}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="UseLayoutRounding" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0,4,8,4" />
        <Setter Property="ap:ButtonProperties.CornerRadius" Value="0" />
        <Setter Property="Template" Value="{StaticResource ToolBarButtonTemplate}" />
    </Style>

</ResourceDictionary>