<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:theme="clr-namespace:Mohsenmou.UI.WPF">


    <ControlTemplate x:Key="ListBoxItemTemplate" TargetType="{x:Type ListBoxItem}">
        <Grid>
            <Border x:Name="Bd"
                Padding="{TemplateBinding Padding}"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                SnapsToDevicePixels="true">
                <ContentPresenter
                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </Border>
            <Border x:Name="FocusBorder"
                BorderBrush="{theme:ThemeResource ResourceKey=ControlFocusBorder}"
                BorderThickness="1"
                Visibility="Collapsed" />
        </Grid>
        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListMouseOverBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListMouseOverBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListSelectedBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListSelectedBorder}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Selector.IsSelectionActive" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Bd" Property="Background" Value="{theme:ThemeResource ResourceKey=ListSelectedBackground}" />
                <Setter TargetName="Bd" Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ListSelectedBorder}" />
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Bd" Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <Trigger Property="IsFocused" Value="true">
                <Setter TargetName="FocusBorder" Property="Visibility" Value="Visible" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ListBoxItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="4,1" />
        <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Template" Value="{StaticResource ListBoxItemTemplate}" />
    </Style>

    <Style BasedOn="{StaticResource ListBoxItemStyle}" TargetType="{x:Type ListBoxItem}" />

    <ControlTemplate x:Key="ListBoxTemplate" TargetType="{x:Type ListBox}">
        <Border x:Name="Bd"
            Padding="1"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}"
            SnapsToDevicePixels="true">
            <ScrollViewer
                Padding="{TemplateBinding Padding}"
                Focusable="false">
                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </ScrollViewer>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="false">
                <Setter TargetName="Bd" Property="Opacity" Value="{theme:ThemeResource ResourceKey=ControlDisabledOpacity}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsGrouping" Value="true" />
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false" />
                </MultiTrigger.Conditions>
                <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
        <Setter Property="Background" Value="{theme:ThemeResource ResourceKey=ContentBackground}" />
        <Setter Property="BorderBrush" Value="{theme:ThemeResource ResourceKey=ContentBackground}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{theme:ThemeResource ResourceKey=ContentForeground}" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="ScrollViewer.PanningMode" Value="Both" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template" Value="{StaticResource ListBoxTemplate}" />
    </Style>

    <Style BasedOn="{StaticResource ListBoxStyle}" TargetType="{x:Type ListBox}" />

</ResourceDictionary>